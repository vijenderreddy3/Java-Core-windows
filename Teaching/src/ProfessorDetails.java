
import java.sql.*;
import javax.swing.*;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

public class ProfessorDetails extends javax.swing.JFrame {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form LoginDetails
     */
    public ProfessorDetails() {
        initComponents();
        con = Connect.ConnectDB();
        Get_Data();
        setLocationRelativeTo(null);
    }

    private void Get_Data() {
        String sql = "SELECT  `id`,`professortype`,  `name`,  `office`,  `address`,  `phone`,  `email`,  `otherInfo` FROM `professor`";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            TableModel tM = DbUtils.resultSetToTableModel(rs);
            Users_table.setModel(tM);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Users_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Users_table.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        Users_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Professor Type", "Name", "Office", "Adress", "Phone", "Email", "Other Information"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Users_table.getTableHeader().setReorderingAllowed(false);
        Users_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Users_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Users_table);

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Update\\Delete profile Data with id =");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void Users_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Users_tableMouseClicked
        // TODO add your handling code here:
        try {
            con = Connect.ConnectDB();
            int row = Users_table.getSelectedRow();
            String table_click = Users_table.getModel().getValueAt(row, 1).toString();
            String sql = "select * from Professor where id= '" + table_click + "'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                this.hide();
                ProfessorUpdates frm = new ProfessorUpdates();
                frm.setVisible(true);
                String professorType = rs.getString("professortype");
                frm.txtProfessorType.setText(professorType);
                String name = rs.getString("name");
                frm.txtName.setText(name);
                String add3 = rs.getString("office");
                frm.txtOffice.setText(add3);
                String add4 = rs.getString("address");
                frm.txtAdress.setText(add4);
                String add6 = rs.getString("phone");
                frm.txtContactNo.setText(add6);
                String add5 = rs.getString("Email");
                frm.txtEmailID.setText(add5);
                String add7 = rs.getString("otherInfo");
                frm.jTextOtherInformation.setText(add7);
                frm.Save.setEnabled(false);
                frm.Delete.setEnabled(true);
                frm.Update.setEnabled(true);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_Users_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            con = Connect.ConnectDB();
            String table_click;
            try {
                table_click = Integer.parseInt(jTextField1.getText()) + "";
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "wrong id", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String sql = "select * from Professor where id= '" + table_click + "'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                this.hide();
                ProfessorUpdates frm = new ProfessorUpdates();
                frm.setVisible(true);
                String professorType = rs.getString("professortype");
                frm.txtProfessorType.setText(professorType);
                String name = rs.getString("name");
                frm.txtName.setText(name);
                String add3 = rs.getString("office");
                frm.txtOffice.setText(add3);
                String add4 = rs.getString("address");
                frm.txtAdress.setText(add4);
                String add6 = rs.getString("phone");
                frm.txtContactNo.setText(add6);
                String add5 = rs.getString("Email");
                frm.txtEmailID.setText(add5);
                String add7 = rs.getString("otherInfo");
                frm.jTextOtherInformation.setText(add7);
                frm.Save.setEnabled(false);
                frm.Delete.setEnabled(true);
                frm.Update.setEnabled(true);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Users_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
