import java.io.*;
import java.util.*;
public class GF2 {

	static int a,b,prime;
	static BufferedWriter bw;
	static BufferedWriter bw1;
	static{
		try{
			bw=new BufferedWriter(new FileWriter(System.getProperty("user.dir") + "/" +"output.txt"));
			bw1=new BufferedWriter(new FileWriter(System.getProperty("user.dir") + "/" +"output.txt",true));
		}
		catch(Exception e){
			System.out.println("problem with writing output to file");
		}
	}
	public static void main(String[] args) {
		int noLines=0;
		String[] input;
		int mxi[],fxi[],gxi[];	
		try{
			BufferedReader br=new BufferedReader(new FileReader(System.getProperty("user.dir") + "/" + "input.txt"));
			BufferedReader br1=new BufferedReader(new FileReader(System.getProperty("user.dir") + "/" + "input.txt"));
			while((br.readLine())!=null){
				noLines=noLines+1;
				}
			input=new String[noLines];
			for(int a=0;a<input.length;a++){
			input[a]=br1.readLine();		
			}		
			br.close();
			br1.close();
			prime=Integer.parseInt(input[0]);
			System.out.println(prime);
			int p=Integer.parseInt(input[1]);
			String v[]=input[2].split(" ");
			String mx[]=new String[p+1];
		for(int i=0;i<mx.length;i++){
			mx[i]="0";
		}
		if (p>=v.length){
			    int p1=p;
				for(int i=(v.length-1);i>=0;i--){
					mx[p1]=v[i];
					p1=p1-1;
				}
		}
		else if(p==(v.length-1)){
			for(int i=(v.length-1);i>=0;i--){
				mx[i]=v[i];
			}
		}
		else if(p<(v.length-1)){
			//BufferedWriter bw= new BufferedWriter(new FileWriter(System.getProperty("user.dir") + "/" +"output.txt"));

			bw.write("Please check the degree values of polynominals");
			bw.close();
		}
		mxi=new int[mx.length];
		for(int i=0;i<=(mxi.length-1);i++){
			mxi[i]=0;
			mxi[i]=Integer.parseInt(mx[(mx.length-1)-i]);
			System.out.print(mxi[i]+" ");
		}
		
		System.out.println();
		p=Integer.parseInt(input[3]);
		String u[]=input[4].split(" ");
		String fx[]=new String[p+1];
		for(int i=0;i<fx.length;i++){
			fx[i]="0";
		}
		if (p>=u.length){
			int z1=p;
			for(int i=(u.length-1);i>=0;i--){
				fx[z1]=u[i];
				z1=z1-1;
			}
		}
		else if(p==(u.length-1)){
			for(int i=(u.length-1);i>=0;i--){
				fx[i]=u[i];
			}
		}
		else if(p<(u.length-1)){
			

			bw.write("Please check the degree values of polynominals");
			
		}
		fxi=new int[fx.length];
		for(int i=0;i<fxi.length;i++){
			fxi[i]=Integer.parseInt(fx[(fx.length-1)-i]);
			System.out.print(fxi[i]+" ");
		}
		System.out.println();
		p=Integer.parseInt(input[3]);
		u=input[6].split(" ");
		String gx[]=new String[p+1];
		for(int i=0;i<gx.length;i++){
			gx[i]="0";
		}
		if (p>=u.length){
			int z1=p;
			for(int i=(u.length-1);i>=0;i--){
				gx[z1]=u[i];
				z1=z1-1;
			}
		}
		else if(p==(u.length-1)){
			for(int i=(u.length-1);i>=0;i--){
				gx[i]=u[i];
			}
		}
		else if(p<(u.length-1)){
			///BufferedWriter bw= new BufferedWriter(new FileWriter(System.getProperty("user.dir") + "/" +"output.txt"));

			bw.write("Please check the degree values of polynominals");
			//bw.close();
		}
		gxi=new int[gx.length];
		for(int i=0;i<gxi.length;i++){
			gxi[i]=Integer.parseInt(gx[(gx.length-1)-i]);
			System.out.print(gxi[i]+" ");
		}
		System.out.println();

			//ADDITION
		try{
			//BufferedWriter bw= new BufferedWriter(new FileWriter(System.getProperty("user.dir") + "/" +"output.txt"));
			
			int add[];
			int x=fxi.length,y=gxi.length;
			if(x>y){
				add=new int[fxi.length];
				int i,j,k=0;
				for(i=0;i<=x-1;i++){
					add[i]=fxi[i];
					for(j=k;i==j&&j<=y-1;j++){
					add[i]=mod(fxi[i]+gxi[j]);
					}
					k=k+1;
				}
				for(i=(add.length-1);i>=0;i--){
					if(add[i]!=0){
						bw.write(Integer.toString(add[i]));
						bw.write(" ");
					}
					else if(add[i]==0){
						for(int m=(add.length-1);m>i;m--){
							if(add[m]==0){
							}
							else if(add[m]!=0){
								bw.write(Integer.toString(add[i]));
								bw.write(" ");
								break;
							}
						}
					}
				}
			}
			else if(x<y){
				add=new int[gxi.length];
				int i,j,k=0;
				for(i=0;i<=y-1;i++){
					add[i]=gxi[i];
					for(j=k;i==j&&j<=(x-1);j++){
					add[i]=mod(fxi[i]+gxi[j]);
					}
					k=k+1;
				}
				for(i=(add.length-1);i>=0;i--){
					if(add[i]!=0){
						bw.write(Integer.toString(add[i]));
						bw.write(" ");
					}
					else if(add[i]==0){
						for(int m=(add.length-1);m>i;m--){
							if(add[m]==0){
							}
							else if(add[m]!=0){
								bw.write(Integer.toString(add[i]));
								bw.write(" ");
								break;
							}
						}
					}
				}	
			}
			else {
				add=new int[fxi.length];
				int i,j,k=0;
				for(i=0;i<=x-1;i++){
					for(j=k;j<=y-1&&j==i;j++){
					add[i]=mod(fxi[i]+gxi[j]);
					}
					k=k+1;
				}
				for(i=(add.length-1);i>=0;i--){
					if(add[i]!=0){
						bw.write(Integer.toString(add[i]));
						bw.write(" ");
					}
					else if(add[i]==0){
						for(int m=(add.length-1);m>i;m--){
							if(add[m]==0){
							}
							else if(add[m]!=0){
								bw.write(Integer.toString(add[i]));
								bw.write(" ");
								break;
							}
						}
					}
				}
			}
			bw.newLine();
			//bw.close();	
			}
			catch(Exception e){
			System.out.println("output.txt file not opened");	
			}
		//SUBSTRACTION
		try{
		//BufferedWriter bw= new BufferedWriter(new FileWriter(System.getProperty("user.dir") + "/" +"output.txt",true));
		int sub[];
		int x=fxi.length,y=gxi.length;
		if(x>y){
			sub=new int[fxi.length];
			int i,j,k=0;
			for(i=0;i<=x-1;i++){
				sub[i]=fxi[i];
				for(j=k;i==j&&j<=y-1;j++){
					sub[i]=mod(fxi[i]-gxi[j]);
				}
				k=k+1;
			}
			for(i=(sub.length-1);i>=0;i--){
				if(sub[i]!=0){
					bw1.write(Integer.toString(sub[i]));
					bw1.write(" ");
				}
				else if(sub[i]==0){
					for(int m=(sub.length-1);m>i;m--){
						if(sub[m]==0){
						}
						else if(sub[m]!=0){
							bw1.write(Integer.toString(sub[i]));
							bw1.write(" ");
							break;
						}
					}
				}
			}
		}
		else if(x<y){
			sub=new int[gxi.length];
			int i,j,k=0;
			for(i=0;i<=y-1;i++){
				sub[i]=-gxi[i];
				for(j=k;i==j&&j<=(x-1);j++){
				sub[i]=mod(fxi[i]-gxi[j]);
				}
				k=k+1;
			}
			for(i=(sub.length-1);i>=0;i--){
				if(sub[i]!=0){
					bw1.write(Integer.toString(sub[i]));
					bw1.write(" ");
				}
				else if(sub[i]==0){
					for(int m=(sub.length-1);m>i;m--){
						if(sub[m]==0){
						}
						else if(sub[m]!=0){
							bw1.write(Integer.toString(sub[i]));
							bw1.write(" ");
							break;
						}
					}
				}
			}	
		}
		else if(x==y){
			sub=new int[fxi.length];
			int i,j,k=0;
			for(i=0;i<=x-1;i++){
				for(j=k;j<=y-1&&j==i;j++){
					sub[i]=mod(fxi[i]-gxi[j]);
				}
				k=k+1;
			}
			for(i=(sub.length-1);i>=0;i--){
				if(sub[i]!=0){
					System.out.println(sub[i]);
					bw1.write(Integer.toString(sub[i]));
					bw1.write(" ");
				}
				else if(sub[i]==0){
					for(int m=(sub.length-1);m>i;m--){
						if(sub[m]==0){
						}
						else if(sub[m]!=0){
							System.out.println(sub[i]);
							bw1.write(Integer.toString(sub[i]));
							bw1.write(" ");
							break;
						}
					}
				}
			}
		}
		bw1.newLine();
		//bw1.close();	
		}
		catch(Exception e){
		System.out.println("output.txt file not opened");	
		}			
		//Multiplication
		try{
			//BufferedWriter bw1= new BufferedWriter(new FileWriter(System.getProperty("user.dir") + "/" +"output.txt",true));
		int mul[];
		int x=fxi.length,y=gxi.length;
			mul=new int[fxi.length+gxi.length-1];
			int i,j;
			for(i=0;i<mul.length;i++){				
				mul[i]=0;
			}
			for(i=0;i<x;i++){
				for(j=0;j<y;j++){
					mul[i+j]=mod(mul[i+j]+(fxi[i]*gxi[j]));	
				}
			}
			for(i=(mul.length-1);i>=0;i--){
				if(mul[i]!=0){
					bw1.write(Integer.toString(mul[i]));
					bw1.write(" ");
				}
				else if(mul[i]==0){
					for(int m=(mul.length-1);m>i;m--){
						if(mul[m]==0){
						}
						else if(mul[m]!=0){
							bw1.write(Integer.toString(mul[i]));
							bw1.write(" ");
							break;
						}
					}
				}
			}
		bw1.newLine();
		bw1.close();
		bw.close();
		}
		catch(Exception e){
		System.out.println("output.txt file not opened");	
		}		

		}
		catch(Exception e){
		System.out.println("file not read");
		}
	}
	
	public static int mod(int c){
		if(c>=prime){
			b=c%prime;			
		}
		else if(c<prime&&c>=0){
			b=c;		
		}
		else if(c<0){
			b=c;
			while(b<0){
			b=b+prime;
			}
		}
		return b;
	}
}
